name: Deploy frontend to S3 + CloudFront

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write          # for OIDC role assumption
  contents: read

env:
  AWS_REGION: eu-north-1
  S3_BUCKET: calling-system-frontend
  CF_DISTRIBUTION_ID: EQGVKF62DQIBN

  # Optional: set these as GitHub “Repository secrets” or “Repository variables”
  # and uncomment the Build step env block below if you want them baked into the app.
  # VITE_API_BASE: https://5x7ca91b1a.execute-api.eu-north-1.amazonaws.com
  # VITE_FROM_POOL: +442045729271,+442045729835,+442045386861,+442045726794,+442045385422,+442045728252,+442045729024

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-frontend
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build (Vite)
        run: npm run build
        
        # If you want to inject envs at build time, uncomment:
        # env:
        #   VITE_API_BASE: ${{ env.VITE_API_BASE }}
        #   VITE_FROM_POOL: ${{ env.VITE_FROM_POOL }}

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::688567267190:role/github-calling-system-role
          aws-region: ${{ env.AWS_REGION }}

      # Fingerprinted assets → long cache
      - name: Upload assets
        run: |
          aws s3 sync dist s3://$S3_BUCKET \
            --delete \
            --exclude "index.html" \
            --cache-control "public,max-age=31536000,immutable"

      # HTML → no-cache
      - name: Upload index.html
        run: |
          aws s3 cp dist/index.html s3://$S3_BUCKET/index.html \
            --cache-control "no-cache, no-store, must-revalidate" \
            --metadata-directive REPLACE \
            --content-type "text/html; charset=utf-8"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CF_DISTRIBUTION_ID \
            --paths "/index.html" "/assets/*"
